# SOME DESCRIPTIVE TITLE.
# Copyright (C) GNU Free Documentation License 1.3
# This file is distributed under the same license as the Python GTK+ 3 Tutorial package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python GTK+ 3 Tutorial 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-01-15 18:53+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/button_widgets.txt:2
msgid "Button Widgets"
msgstr ""

#: ../../source/button_widgets.txt:5
msgid "Button"
msgstr ""

#: ../../source/button_widgets.txt:7
msgid "The Button widget is another commonly used widget. It is generally used to attach a function that is called when the button is pressed."
msgstr ""

#: ../../source/button_widgets.txt:10
msgid "The :class:`Gtk.Button` widget can hold any valid child widget. That is it can hold most any other standard :class:`Gtk.Widget`. The most commonly used child is the :class:`Gtk.Label`."
msgstr ""

#: ../../source/button_widgets.txt:14
msgid "Usually, you want to connect to the button's \"clicked\" signal which is emitted when the button has been pressed and released."
msgstr ""

#: ../../source/button_widgets.txt:18
#: ../../source/button_widgets.txt:39
#: ../../source/button_widgets.txt:78
#: ../../source/button_widgets.txt:95
#: ../../source/button_widgets.txt:131
#: ../../source/button_widgets.txt:150
msgid "Example"
msgstr ""

#: ../../source/button_widgets.txt:26
msgid "ToggleButton"
msgstr ""

#: ../../source/button_widgets.txt:28
msgid "A :class:`Gtk.ToggleButton` is very similar to a normal :class:`Gtk.Button`, but when clicked they remain activated, or pressed, until clicked again. When the state of the button is changed, the \"toggled\" signal is emitted."
msgstr ""

#: ../../source/button_widgets.txt:32
msgid "To retrieve the state of the :class:`Gtk.ToggleButton`, you can use the :meth:`Gtk.ToggleButton.get_active` method. This returns ``True`` if the button is \"down\". You can also set the toggle button's state, with :meth:`Gtk.ToggleButton.set_active`. Note that, if you do this, and the state actually changes, it causes the \"toggled\" signal to be emitted."
msgstr ""

#: ../../source/button_widgets.txt:47
msgid "CheckButton"
msgstr ""

#: ../../source/button_widgets.txt:48
msgid ":class:`Gtk.CheckButton` inherits from :class:`Gtk.ToggleButton`. The only real difference between the two is :class:`Gtk.CheckButton`'s appearance. A :class:`Gtk.CheckButton` places a discrete :class:`Gtk.ToggleButton` next to a widget, (usually a :class:`Gtk.Label`). The \"toggled\" signal, :meth:`Gtk.ToggleButton.set_active` and :meth:`Gtk.ToggleButton.get_active` are inherited."
msgstr ""

#: ../../source/button_widgets.txt:56
msgid "RadioButton"
msgstr ""

#: ../../source/button_widgets.txt:57
msgid "Like checkboxes, radio buttons also inherit from :class:`Gtk.ToggleButton`, but these work in groups, and only one :class:`Gtk.RadioButton` in a group can be selected at any one time. Therefore, a :class:`Gtk.RadioButton` is one way of giving the user a choice from many options."
msgstr ""

#: ../../source/button_widgets.txt:62
msgid "Radio buttons can be created with one of the static methods :meth:`Gtk.RadioButton.new_from_widget`, :meth:`Gtk.RadioButton.new_with_label_from_widget` or :meth:`Gtk.RadioButton.new_with_mnemonic_from_widget`. The first radio button in a group will be created passing ``None`` as the *group* argument. In subsequent calls, the group you wish to add this button to should be passed as an argument."
msgstr ""

#: ../../source/button_widgets.txt:70
msgid "When first run, the first radio button in the group will be active. This can be changed by calling :meth:`Gtk.ToggleButton.set_active` with ``True`` as first argument."
msgstr ""

#: ../../source/button_widgets.txt:74
msgid "Changing a :class:`Gtk.RadioButton`'s widget group after its creation can be achieved by calling :meth:`Gtk.RadioButton.join_group`."
msgstr ""

#: ../../source/button_widgets.txt:86
msgid "LinkButton"
msgstr ""

#: ../../source/button_widgets.txt:87
msgid "A :class:`Gtk.LinkButton` is a :class:`Gtk.Button` with a hyperlink, similar to the one used by web browsers, which triggers an action when clicked. It is useful to show quick links to resources."
msgstr ""

#: ../../source/button_widgets.txt:91
msgid "The URI bound to a :class:`Gtk.LinkButton` can be set specifically using :meth:`Gtk.LinkButton.set_uri`, and retrieved using :meth:`Gtk.LinkButton.get_uri`."
msgstr ""

#: ../../source/button_widgets.txt:103
msgid "SpinButton"
msgstr ""

#: ../../source/button_widgets.txt:104
msgid "A :class:`Gtk.SpinButton` is an ideal way to allow the user to set the value of some attribute. Rather than having to directly type a number into a :class:`Gtk.Entry`, :class:`Gtk.SpinButton` allows the user to click on one of two arrows to increment or decrement the displayed value. A value can still be typed in, with the bonus that it can be checked to ensure it is in a given range. The main properties of a :class:`Gtk.SpinButton` are set through :class:`Gtk.Adjustment`."
msgstr ""

#: ../../source/button_widgets.txt:112
msgid "To change the value that :class:`Gtk.SpinButton` is showing, use :meth:`Gtk.SpinButton.set_value`. The value entered can either be an integer or float, depending on your requirements, use :meth:`Gtk.SpinButton.get_value` or :meth:`Gtk.SpinButton.get_value_as_int`, respectively."
msgstr ""

#: ../../source/button_widgets.txt:117
msgid "When you allow the displaying of float values in the spin button, you may wish to adjust the number of decimal spaces displayed by calling :meth:`Gtk.SpinButton.set_digits`."
msgstr ""

#: ../../source/button_widgets.txt:121
msgid "By default, :class:`Gtk.SpinButton` accepts textual data. If you wish to limit this to numerical values only, call :meth:`Gtk.SpinButton.set_numeric` with ``True`` as argument."
msgstr ""

#: ../../source/button_widgets.txt:125
msgid "We can also adjust the update policy of :class:`Gtk.SpinButton`. There are two options here; by default the spin button updates the value even if the data entered is invalid. Alternatively, we can set the policy to only update when the value entered is valid by calling :meth:`Gtk.SpinButton.set_update_policy`."
msgstr ""

#: ../../source/button_widgets.txt:139
msgid "Switch"
msgstr ""

#: ../../source/button_widgets.txt:140
msgid "A :class:`Gtk.Switch` is a widget that has two states: on or off. The user can control which state should be active by clicking the empty area, or by dragging the handle."
msgstr ""

#: ../../source/button_widgets.txt:144
msgid "You shouldn't use the \"activate\" signal on the Gtk.Switch which is an action signal and emitting it causes the switch to animate. Applications should never connect to this signal, but use the \"notify::active\" signal, see the example here below."
msgstr ""

