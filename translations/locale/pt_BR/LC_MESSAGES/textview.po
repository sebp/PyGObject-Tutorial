# SOME DESCRIPTIVE TITLE.
# Copyright (C) GNU Free Documentation License 1.3
# This file is distributed under the same license as the Python GTK+ 3 Tutorial package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Python GTK+ 3 Tutorial 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-04-04 11:32-0300\n"
"PO-Revision-Date: 2018-04-11 23:07-0300\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.8.11\n"
"Last-Translator: Tomaz Cunha <tomazmcn@gmail.com>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"Language: pt_BR\n"

#: ../../source/textview.txt:2
msgid "Multiline Text Editor"
msgstr "Editor de Texto Multilinha"

#: ../../source/textview.txt:4
msgid ""
"The :class:`Gtk.TextView` widget can be used to display and edit large "
"amounts of formatted text. Like the :class:`Gtk.TreeView`, it has a model/"
"view design. In this case the :class:`Gtk.TextBuffer` is the model which "
"represents the text being edited. This allows two or more :class:`Gtk."
"TextView` widgets to share the same :class:`Gtk.TextBuffer`, and allows "
"those text buffers to be displayed slightly differently. Or you could "
"maintain several text buffers and choose to display each one at different "
"times in the same :class:`Gtk.TextView` widget."
msgstr ""
"O widget :class:`Gtk.TextView` pode ser usado para exibir e editar grandes "
"quantidades de texto formatado. Como o :class:`Gtk.TreeView`, ele possui um "
"design de modelo/visualização. Neste caso, o :class:`Gtk.TextBuffer` é o "
"modelo que representa o texto que está sendo editado. Isto permite que dois "
"ou mais widgets :class:`Gtk.TextView` compartilhem o mesmo :class:`Gtk."
"TextBuffer`, e permite que os buffers de texto sejam exibidos de forma "
"ligeiramente diferente. Ou você pode manter vários buffers de texto e optar "
"por exibir cada um deles em momentos diferentes no mesmo widget :class:`Gtk."
"TextView`."

#: ../../source/textview.txt:13
msgid "The View"
msgstr "A Visualização"

#: ../../source/textview.txt:15
msgid ""
"The :class:`Gtk.TextView` is the frontend with which the user can add, edit "
"and delete textual data. They are commonly used to edit multiple lines of "
"text. When creating a :class:`Gtk.TextView` it contains its own default :"
"class:`Gtk.TextBuffer`, which you can access via the :meth:`Gtk.TextView."
"get_buffer` method."
msgstr ""
"O :class:`Gtk.TextView` é o frontend com o qual o usuário pode adicionar, "
"editar e excluir dados textuais. Eles são comumente usados para editar "
"várias linhas de texto. Ao criar um :class:`Gtk.TextView` ele contém seu "
"próprio padrão :class:`Gtk.TextBuffer`, que você pode acessar através do "
"método :meth:`Gtk.TextView.get_buffer`."

#: ../../source/textview.txt:21
msgid ""
"By default, text can be added, edited and removed from the :class:`Gtk."
"TextView`. You can disable this by calling :meth:`Gtk.TextView."
"set_editable`. If the text is not editable, you usually want to hide the "
"text cursor with :meth:`Gtk.TextView.set_cursor_visible` as well. In some "
"cases it may be useful to set the justification of the text with :meth:`Gtk."
"TextView.set_justification`. The text can be displayed at the left edge, (:"
"attr:`Gtk.Justification.LEFT`), at the right edge (:attr:`Gtk.Justification."
"RIGHT`), centered (:attr:`Gtk.Justification.CENTER`), or distributed across "
"the complete width (:attr:`Gtk.Justification.FILL`)."
msgstr ""
"Por padrão, o texto pode ser adicionado, editado e removido da :class:`Gtk."
"TextView`. Você pode desabilitar isso chamando :meth:`Gtk.TextView."
"set_editable`. Se o texto não for editável, você geralmente deseja ocultar o "
"cursor de texto com :meth:`Gtk.TextView.set_cursor_visible` também. Em "
"alguns casos, pode ser útil definir a justificação do texto com :meth:`Gtk."
"TextView.set_justification`. O texto pode ser exibido na borda esquerda, (:"
"attr:`Gtk.Justification.LEFT`), na extremidade direita (:attr:`Gtk."
"Justification.RIGHT`), centralizado (:attr:`Gtk.Justification.CENTER`), ou "
"distribuído em toda a largura (:attr:`Gtk.Justification.FILL`)."

#: ../../source/textview.txt:31
msgid ""
"Another default setting of the :class:`Gtk.TextView` widget is long lines of "
"text will continue horizontally until a break is entered. To wrap the text "
"and prevent it going off the edges of the screen call :meth:`Gtk.TextView."
"set_wrap_mode`."
msgstr ""
"Outra configuração padrão do widget :class:`Gtk.TextView` é que linhas "
"longas de texto continuarão horizontalmente até que uma quebra seja "
"inserida. Para encapsular o texto e impedir que ele saia das bordas da tela, "
"chame :meth:`Gtk.TextView.set_wrap_mode`."

#: ../../source/textview.txt:36
msgid "The Model"
msgstr "O Modelo"

#: ../../source/textview.txt:38
msgid ""
"The :class:`Gtk.TextBuffer` is the core of the :class:`Gtk.TextView` widget, "
"and is used to hold whatever text is being displayed in the :class:`Gtk."
"TextView`. Setting and retrieving the contents is possible with :meth:`Gtk."
"TextBuffer.set_text` and :meth:`Gtk.TextBuffer.get_text`. However, most text "
"manipulation is accomplished with *iterators*, represented by a :class:`Gtk."
"TextIter`. An iterator represents a position between two characters in the "
"text buffer. Iterators are not valid indefinitely; whenever the buffer is "
"modified in a way that affects the contents of the buffer, all outstanding "
"iterators become invalid."
msgstr ""
"O :class:`Gtk.TextBuffer` é o núcleo do widget :class:`Gtk.TextView` e é "
"usado para armazenar qualquer texto que esteja sendo exibido na :class:`Gtk."
"TextView`. Definir e recuperar o conteúdo é possível com :meth:`Gtk."
"TextBuffer.set_text` e :meth:`Gtk.TextBuffer.get_text`. No entanto, a maior "
"parte da manipulação de texto é realizada com *iteradores*, representados "
"por um :class:`Gtk.TextIter`. Um iterador representa uma posição entre dois "
"caracteres no buffer de texto. Iteradores não são válidos indefinidamente; "
"sempre que o buffer é modificado de uma maneira que afeta o conteúdo do "
"buffer, todos os iteradores pendentes se tornam inválidos."

#: ../../source/textview.txt:48
msgid ""
"Because of this, iterators can't be used to preserve positions across buffer "
"modifications. To preserve a position, use :class:`Gtk.TextMark`. A text "
"buffer contains two built-in marks; an \"insert\" mark (which is the "
"position of the cursor) and the \"selection_bound\" mark. Both of them can "
"be retrieved using :meth:`Gtk.TextBuffer.get_insert` and :meth:`Gtk."
"TextBuffer.get_selection_bound`, respectively. By default, the location of "
"a :class:`Gtk.TextMark` is not shown. This can be changed by calling :meth:"
"`Gtk.TextMark.set_visible`."
msgstr ""
"Por causa disso, os iteradores não podem ser usados para preservar posições "
"nas modificações do buffer. Para preservar uma posição, use :class:`Gtk."
"TextMark`. Um buffer de texto contém duas marcas internas; uma marca \"insert"
"\" (que é a posição do cursor) e a marca \"selection_bound\". Ambos podem "
"ser recuperados usando :meth:`Gtk.TextBuffer.get_insert` e :meth:`Gtk."
"TextBuffer.get_selection_bound`, respectivamente. Por padrão, a localização "
"de um :class:`Gtk.TextMark` não é mostrada. Isso pode ser alterado chamando :"
"meth:`Gtk.TextMark.set_visible`."

#: ../../source/textview.txt:56
msgid ""
"Many methods exist to retrieve a :class:`Gtk.TextIter`. For instance, :meth:"
"`Gtk.TextBuffer.get_start_iter` returns an iterator pointing to the first "
"position in the text buffer, whereas :meth:`Gtk.TextBuffer.get_end_iter` "
"returns an iterator pointing past the last valid character. Retrieving the "
"bounds of the selected text can be achieved by calling :meth:`Gtk.TextBuffer."
"get_selection_bounds`."
msgstr ""
"Existem muitos métodos para recuperar um :class:`Gtk.TextIter`. Por "
"exemplo, :meth:`Gtk.TextBuffer.get_start_iter` retorna um iterador apontando "
"para a primeira posição no buffer de texto, enquanto :meth:`Gtk.TextBuffer."
"get_end_iter` retorna um iterador apontando após o último caractere válido. "
"A recuperação dos limites do texto selecionado pode ser obtida chamando :"
"meth:`Gtk.TextBuffer.get_selection_bounds`."

#: ../../source/textview.txt:63
msgid ""
"To insert text at a specific position use :meth:`Gtk.TextBuffer.insert`. "
"Another useful method is :meth:`Gtk.TextBuffer.insert_at_cursor` which "
"inserts text wherever the cursor may be currently positioned. To remove "
"portions of the text buffer use :meth:`Gtk.TextBuffer.delete`."
msgstr ""
"Para inserir texto em uma posição específica use :meth:`Gtk.TextBuffer."
"insert`. Outro método útil é :meth:`Gtk.TextBuffer.insert_at_cursor` que "
"insere texto onde quer que o cursor esteja posicionado no momento. Para "
"remover partes do buffer de texto, use :meth:`Gtk.TextBuffer.delete`."

#: ../../source/textview.txt:68
msgid ""
"In addition, :class:`Gtk.TextIter` can be used to locate textual matches in "
"the buffer using :meth:`Gtk.TextIter.forward_search` and :meth:`Gtk.TextIter."
"backward_search`. The start and end iters are used as the starting point of "
"the search and move forwards/backwards depending on requirements."
msgstr ""
"Além disso, :class:`Gtk.TextIter` pode ser usado para localizar "
"correspondências textuais no buffer usando :meth:`Gtk.TextIter."
"forward_search` e :meth:`Gtk.TextIter.backward_search`. Os iters inicial e "
"final são usados como ponto de partida da pesquisa e avançam/retrocedem "
"dependendo dos requisitos."

#: ../../source/textview.txt:75
msgid "Tags"
msgstr ""

#: ../../source/textview.txt:77
msgid ""
"Text in a buffer can be marked with tags. A tag is an attribute that can be "
"applied to some range of text. For example, a tag might be called \"bold\" "
"and make the text inside the tag bold. However, the tag concept is more "
"general than that; tags don't have to affect appearance. They can instead "
"affect the behaviour of mouse and key presses, \"lock\" a range of text so "
"the user can't edit it, or countless other things. A tag is represented by "
"a :class:`Gtk.TextTag` object. One :class:`Gtk.TextTag` can be applied to "
"any number of text ranges in any number of buffers."
msgstr ""
"O texto em um buffer pode ser marcado com tags. Uma tag é um atributo que "
"pode ser aplicado a um intervalo de texto. Por exemplo, uma tag pode ser "
"chamada de \"negrito\" e tornar o texto dentro da tag em negrito. No "
"entanto, o conceito de tag é mais geral do que isso; as tags não precisam "
"afetar a aparência. Eles podem afetar o comportamento de pressionamentos de "
"mouse e de tecla, \"bloquear\" um intervalo de texto para que o usuário não "
"possa editá-lo ou inúmeras outras coisas. Uma tag é representada por um "
"objeto :class:`Gtk.TextTag`. Um :class:`Gtk.TextTag` pode ser aplicado a "
"qualquer número de intervalos de texto em qualquer número de buffers."

#: ../../source/textview.txt:86
msgid ""
"Each tag is stored in a :class:`Gtk.TextTagTable`. A tag table defines a set "
"of tags that can be used together. Each buffer has one tag table associated "
"with it; only tags from that tag table can be used with the buffer. A single "
"tag table can be shared between multiple buffers, however."
msgstr ""
"Cada tag é armazenada em :class:`Gtk.TextTagTable`. Uma tabela de tags "
"define um conjunto de tags que podem ser usadas juntas. Cada buffer tem uma "
"tabela de tags associada a ele; somente tags dessa tabela de tags podem ser "
"usadas com o buffer. No entanto, uma única tabela de tags pode ser "
"compartilhada entre vários buffers."

#: ../../source/textview.txt:91
msgid ""
"To specify that some text in the buffer should have specific formatting, you "
"must define a tag to hold that formatting information, and then apply that "
"tag to the region of text using :meth:`Gtk.TextBuffer.create_tag` and :meth:"
"`Gtk.TextBuffer.apply_tag`::"
msgstr ""
"Para especificar que algum texto no buffer deve ter uma formatação "
"específica, você deve definir uma tag para manter as informações de "
"formatação e, em seguida, aplicar essa tag à região do texto usando :meth:"
"`Gtk.TextBuffer.create_tag` e :meth:`Gtk.TextBuffer.apply_tag`::"

#: ../../source/textview.txt:99
msgid "The following are some of the common styles applied to text:"
msgstr "A seguir estão alguns dos estilos comuns aplicados ao texto:"

# nome da propriedade trocado
#: ../../source/textview.txt:101
msgid "Background colour (\"foreground\" property)"
msgstr "Cor de fundo (propriedade \"background\")"

#: ../../source/textview.txt:102
msgid "Foreground colour (\"background\" property)"
msgstr "Cor de primeiro plano (propriedade \"foreground\")"

#: ../../source/textview.txt:103
msgid "Underline (\"underline\" property)"
msgstr "Sublinhado (propriedade \"underline\")"

#: ../../source/textview.txt:104
msgid "Bold (\"weight\" property)"
msgstr "Negrito (propriedade \"weight\")"

#: ../../source/textview.txt:105
msgid "Italics (\"style\" property)"
msgstr "Itálico (propriedade \"style\")"

#: ../../source/textview.txt:106
msgid "Strikethrough (\"strikethrough\" property)"
msgstr "Tachado (propriedade \"strikethrough\")"

#: ../../source/textview.txt:107
msgid "Justification (\"justification\" property)"
msgstr "Justificação (propriedade de \"justification\")"

#: ../../source/textview.txt:108
msgid "Size (\"size\" and \"size-points\" properties)"
msgstr "Tamanho (propriedades \"size\" e \"size-points\")"

#: ../../source/textview.txt:109
msgid "Text wrapping (\"wrap-mode\" property)"
msgstr "Quebra automática de texto (propriedade \"wrap-mode\")"

#: ../../source/textview.txt:111
msgid ""
"You can also delete particular tags later using :meth:`Gtk.TextBuffer."
"remove_tag` or delete all tags in a given region by calling :meth:`Gtk."
"TextBuffer.remove_all_tags`."
msgstr ""
"Você também pode excluir tags particulares posteriormente usando :meth:`Gtk."
"TextBuffer.remove_tag` ou excluir todas as tags em uma determinada região "
"chamando :meth:`Gtk.TextBuffer.remove_all_tags`."

#: ../../source/textview.txt:115
msgid "Example"
msgstr "Exemplo"
