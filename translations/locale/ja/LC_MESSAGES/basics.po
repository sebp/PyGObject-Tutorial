# Japanese translation for basics.txt in PyGObject-Tutorial.
# Copyright (C) GNU Free Documentation License 1.3
# This file is distributed under the same license as the Python GTK+ 3 Tutorial package.
# Takeshi AIHANA <takeshi.aihana@gmail.com>, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Python GTK+ 3 Tutorial 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-09-24 13:17\n"
"PO-Revision-Date: 2012-09-24 17:56+0900\n"
"Last-Translator: Takeshi AIHANA <takeshi.aihana@gmail.com>\n"
"Language-Team: Japanese <takeshi.aihana@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/basics.txt:4
# 89c80c4c2d494795ad0b4a96ad457e53
msgid "Basics"
msgstr "基本"

#: ../source/basics.txt:5
# 82479bad82cf45beb69d8ab747f4c9d9
msgid "This section will introduce some of the most important aspects of GTK+."
msgstr "このセクションでは GTK+ でもっとも重要な部分について紹介します。"

#: ../source/basics.txt:12
# ec0e7ac1935d4b5f8f1eeb6e3f2c4941
msgid "Main loop and Signals"
msgstr "メイン・ループといろいろなシグナル"

#: ../source/basics.txt:13
# 57996fea1fff487c897e40417d3f51ba
msgid "Like most GUI toolkits, GTK+ uses an event-driven programming model. When the user is doing nothing, GTK+ sits in the main loop and waits for input. If the user performs some action - say, a mouse click - then the main loop \"wakes up\" and delivers an event to GTK+."
msgstr "多くの GUI ツールキット同様に、GTK+ もイベント駆動型のプログラミング・モデルを採用しています。ユーザが何もしなければ、GTK+ はメイン・ループの中でじっとしたまま入力待ちになります。ユーザが何かアクションを起こしたら - 例えば、マウスをクリックすると - メイン・ループが「目を覚まして」そのイベントを GTK+ に配送します。"

#: ../source/basics.txt:18
# fe001a9811074026b8c0d3f44d56a150
msgid "When widgets receive an event, they frequently emit one or more signals. Signals notify your program that \"something interesting happened\" by invoking functions you've connected to the signal. Such functions are commonly known as *callbacks*. When your callbacks are invoked, you would typically take some action - for example, when an Open button is clicked you might display a file chooser dialog. After a callback finishes, GTK+ will return to the main loop and await more user input."
msgstr "ウィジェットがイベントを一つ受け取ると、それらは一個以上のシグナルを発行します。シグナルは、あなたがそのシグナルに接続しておいた関数を呼び出すことで、あなたのプログラムに「何か興味あることが起こりましたよ」と通知してくれます。そのような関数は一般的にコールバックと呼ばれています。コールバックが呼び出されると、原則的に何かアクションを起こすことになります - 例えば、開くボタンをクリックするとファイル選択ダイアログが表示されます。コールバックが完了したら、GTK+ はメイン・ループに制御を戻し、再び次のユーザからの入力待ちに入ります。"

#: ../source/basics.txt:28
# cbbe13db88f149dbb5f41fa8671466be
msgid "A generic example is:"
msgstr "シグナルに接続する一般的な定義は次のとおりです: "

#: ../source/basics.txt:34
# 1551dac8189c4cecb9f2ac613603a8fd
msgid "Firstly, *widget* is an instance of a widget we created earlier. Next, the event we are interested in. Each widget has its own particular events which can occur. For instance, if you have a button you usually want to connect to the \"clicked\" event. This means that when the button is clicked, the signal is issued. Thirdly, the *callback* argument is the name of the callback function. It contains the code which runs when signals of the specified type are issued. Finally, the *data* argument includes any data which should be passed when the signal is issued. However, this argument is completely optional and can be left out if not required."
msgstr "まず *widget* はこれより先に生成した任意のウィジェットのインスタンスに相当します。次に *event* はこのプログラムで興味を持ったイベントです。ウィジェットはそれぞれ自分自身で特定のイベントを所有しています。例えば、ボタンならば、通常は \"clicked\" イベントに接続します。これは、ボタンをクリックしたら、そのシグナルが発行されるという意味です。三つ目の *callback* はコールバックの関数名です。この関数には、特定の種類のシグナルが発行されたら実行するコードが含まれています。最後の *data* はシグナルが発行された時にコールバックの関数に引き渡すべきデータが含まれています。但し、これは完全にオプションであり、必要なければ指定しなくても構いません。"

#: ../source/basics.txt:46
# 12d9e4b1e404412bb7345589fff8dfe2
msgid "The function returns a number that identifies this particular signal-callback pair. It is required to disconnect from a signal such that the callback function will not be called during any future or currently ongoing emissions of the signal it has been connected to."
msgstr ":func:`connect` 関数は、この特定のシグナルとコールバックのペアを識別する一個の数値を返します。この値は、コールバックに接続しているシグナルが発行されているか、または将来発行される状態にある時に、あえてコールバックの関数を呼び出さないように、シグナルからの接続を切断するような時に必要になります。"

#: ../source/basics.txt:56
# abc3f208228249b099b0c3ce8cd571b2
msgid "Almost all applications will connect to the \"delete-event\" signal of the top-level window. It is emitted if a user requests that a toplevel window is closed. The default handler for this signal destroys the window, but does not terminate the application. Connecting the \"delete-event\" signal to the function :func:`Gtk.main_quit` will result in the desired behaviour."
msgstr "アプリケーションのほぼ全てが、トップレベル・ウィンドウの \"delete-event” シグナルに接続します。このシグナルは、ユーザがトップレベル・ウィンドウを閉じるように要求があったら発行されます。このシグナルに対するデフォルトのコールバック (ハンドラ) はウィンドウを破棄 (destroy) しますが、アプリケーションは終了しません。\"delete-event\" シグナルを :func:`Gtk.main_quit` 関数に接続すると、アプリケーションも一緒に終了します。"

#: ../source/basics.txt:66
# 692cf251df884ab39d074470d0391ee1
msgid "Calling :func:`Gtk.main_quit` makes the main loop inside of :func:`Gtk.main` return."
msgstr ":func:`Gtk.main_quit` 関数を呼び出すと :func:`Gtk.main` 関数の内側にあるメイン・ループに制御が戻ります。"

#: ../source/basics.txt:69
# 532f209e0a554e548e5d3df141e498d9
msgid "Properties"
msgstr "いろいろなプロパティ"

#: ../source/basics.txt:70
# 4c92101d20a34ac9a0cf40a6448e3a2e
msgid "Properties describe the configuration and state of widgets. As for signals, each widget has its own particular set of properties. For example, a button has the property \"label\" which contains the text of the label widget inside the button. You can specify the name and value of any number of properties as keyword arguments when creating an instance of a widget. To create a label aligned to the right with the text \"Hello World\" and an angle of 25 degrees, use:"
msgstr "プロパティにはウィジェットの設定や状態を記述します。シグナルに関しては、ウィジエットは自分専用のプロパティの集合を所有しています。例えば、ボタンならば \"label\" というプロパティがあり、これにはボタンの内側にあるラベル・ウィジェットが所有している文字列 (これもプロパティ) が格納されています。任意のウィジェットを生成する際にキーワード型の引数を使ってプロパティの名前とそのプロパティに格納する値を、いくつか指定することができます。例えば \"Hello World\" という文字列を右寄せにして、表示する角度を 25 度にしたラベルを生成する際は、次のようになります::"

#: ../source/basics.txt:81
# b6b022a0ebbc418e8bd55193506a3cd5
msgid "which is equivalent to"
msgstr "これは次の呼び出しと等価です::"

#: ../source/basics.txt:90
# beb9a2afa7e844e69cc7d0311a095423
msgid "Instead of using getters and setters you can also get and set the properties with ``widget.get_property(\"prop-name\")`` and ``widget.set_property(\"prop-name\", value)``, respectively."
msgstr "getter と setter を利用する代わりに、 ``widget.get_property(\"プロパティ名\")`` と ``widget.set_property(\"プロパティ名\", その値)`` を使ってそれぞれプロパティを取得したり指定することも可能です。"

