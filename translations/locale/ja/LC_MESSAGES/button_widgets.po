# Japanese translation for button_widgets.txt in PyGObject-Tutorial.
# Copyright (C) GNU Free Documentation License 1.3
# This file is distributed under the same license as the Python GTK+ 3 Tutorial package.
# Takeshi AIHANA <takeshi.aihana@gmail.com>, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Python GTK+ 3 Tutorial 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-09-24 13:17\n"
"PO-Revision-Date: 2012-10-12 10:51+0900\n"
"Last-Translator: Takeshi AIHANA <takeshi.aihana@gmail.com>\n"
"Language-Team: Japanese <takeshi.aihana@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/button_widgets.txt:2
# a2c5277c9bdc48d4a6a0c8263609f56d
msgid "Button Widgets"
msgstr "ボタン・ウィジェット"

#: ../source/button_widgets.txt:5
# 7075419322e746b38d7f4cbcf22dc58c
msgid "Button"
msgstr "ボタン"

#: ../source/button_widgets.txt:7
# cd5489c07355433faac45c297aec33a4
msgid "The Button widget is another commonly used widget. It is generally used to attach a function that is called when the button is pressed."
msgstr "ボタン・ウィジェットもよく使用するもう一つウィジェットです。ほとんどの場合、ボタンを生成してから、そのボタンを押下する際に呼び出すメソッドを関連づけるという使い方が一般的です。"

#: ../source/button_widgets.txt:10
# c42871a81fc84928b72500b3c97e9666
msgid "The :class:`Gtk.Button` widget can hold any valid child widget. That is it can hold most any other standard :class:`Gtk.Widget`. The most commonly used child is the :class:`Gtk.Label`."
msgstr ":class:`Gtk.Button` ウィジットの上には妥当な子ウィジェットをいくつかパッキングできるようになっています。それらの子ウィジェットは、すなわち、標準の :class:`Gtk.Widget` クラスのオブジェクトです。もっともよく利用する子ウィジェットは :class:`Gtk.Label` です。"

#: ../source/button_widgets.txt:14
# 80fa2eed7f094ac184bad72476920984
msgid "Usually, you want to connect to the button's \"clicked\" signal which is emitted when the button has been pressed and released."
msgstr "通常、ボタンを押下したり解放する際に発行される \"clicked\" シグナルに接続することになります。"

#: ../source/button_widgets.txt:18
# 5fdd84f13d3e4c42beb2ed750d2070f9
msgid "Button Objects"
msgstr "ボタンのオブジェクト"

#: ../source/button_widgets.txt:21
# d30c131880974cc5a1ac635dbd250eb3
msgid "If label is not ``None``, creates a new :class:`Gtk.Button` with a :class:`Gtk.Label` child containing the given text."
msgstr "*label* が ``None`` でなければ、指定した文字列を格納した :class:`Gtk.Label` を子ウィジェットに持つ新しい :class:`Gtk.Button` を一つ生成します。"

#: ../source/button_widgets.txt:24
# f5e026010fb245159e1ca15f6c63ad18
msgid "If *stock* is not ``None``, creates a new button containing the image and text from a :ref:`stock item <stock-items>`."
msgstr "*stock* が ``None`` でなければ :ref:`ストック・アイテム <stock-items>` から取得した画像とラベルを子ウィジェットに持つ新しいボタンを生成します。"

#: ../source/button_widgets.txt:27
# 2e460ff68cc74d16bc75b347b8eeaa0c
msgid "If *use_underline* is set to ``True``, an underline  in the text indicates the next character should be used for the mnemonic accelerator key."
msgstr "*use_underline* を ``True`` にすると、ラベルの中で下線の次にある文字をニーモニックのアクセラレータ・キーとして利用できるようになります。"

#: ../source/button_widgets.txt:32
# de6b723a11ec4ab18b94484d56452339
msgid "Sets the text of the label of the button to *label*."
msgstr "ボタンのラベルを *label* という文字列にします。"

#: ../source/button_widgets.txt:36
# 85aed9f7f2724b2897723afc0f03fdba
msgid "If *True*, an underline in the text of the button label indicates the next character should be used for the mnemonic accelerator key."
msgstr "*use_underline* を ``True`` にすると、ボタンにあるラベルの中で下線の次にある文字をニーモニックのアクセラレータ・キーとして扱います。"

#: ../source/button_widgets.txt:40
#: ../source/button_widgets.txt:79
#: ../source/button_widgets.txt:150
#: ../source/button_widgets.txt:186
#: ../source/button_widgets.txt:279
# 474eb29d570b4f3790c695ff1e5c9121
# bfe505aabfba44ff890bf7bb3117a8ab
# 0d7cf4162bb04f9cb5c377e67cd0f426
# 3578a99b221a4bb786c98dbcf8185a2f
# 11719ed1ff8f4bcbae422bdbe2820745
msgid "Example"
msgstr "例"

#: ../source/button_widgets.txt:48
# c84758a5ca2a471a8a325d63d9595d5c
msgid "ToggleButton"
msgstr "トグルボタン"

#: ../source/button_widgets.txt:50
# 7d1722ee33a74d3fa3a7ab8f676c5599
msgid "A :class:`Gtk.ToggleButton` is very similar to a normal :class:`Gtk.Button`, but when clicked they remain activated, or pressed, until clicked again. When the state of the button is changed, the \"toggled\" signal is emitted."
msgstr ":class:`Gtk.ToggleButton` クラスは :class:`Gtk.Button` クラスにとてもよく似ていますが、ボタンをクリックするともう一度クリックされるまでそのボタンの状態を記憶しています。ボタンの状態が変更されると、\"toggled\" というシグナルが発行されます。"

#: ../source/button_widgets.txt:54
# 7ded42e712c44c09a5535ee130c69ef7
msgid "To retrieve the state of the :class:`Gtk.ToggleButton`, you can use the :meth:`Gtk.ToggleButton.get_active` method. This returns ``True`` if the button is \"down\". You can also set the toggle button's state, with :meth:`Gtk.ToggleButton.set_active`. Note that, if you do this, and the state actually changes, it causes the \"toggled\" signal to be emitted."
msgstr ":class:`Gtk.ToggleButton` の状態を取得する際は :meth:`Gtk.ToggleButton.get_active` メソッドを利用します。このメソッドは、ボタンが「押下」されていたら ``True`` を返します。さらに、トグルボタンの状態を :meth:`Gtk.ToggleButton.set_active` メソッドで指定することもできます。但し、このようにしてトグルボタンの状態を変更した場合でも \"toggled\" シグナルが発行される点に留意して下さい。"

#: ../source/button_widgets.txt:61
# 8ee1fc9888d546ce981c93fd842f3ec6
msgid "ToggleButton Objects"
msgstr "トグルボタンのオブジェクト"

#: ../source/button_widgets.txt:65
# 10f1e2c2bf0044bdacd0c287fc33c2e0
msgid "The arguments are the same as for the :class:`Gtk.Button` constructor."
msgstr "引数は :class:`Gtk.Button` のコンストラクタと同じです。"

#: ../source/button_widgets.txt:69
# e637b154632042f9a9c2da946bd969d1
msgid "Returns the buttons current state. Returns ``True`` if the toggle button is pressed in and ``False`` if it is raised."
msgstr "現在のトグルボタンの状態を返します。トグルボタンが押下されている場合は ``True`` を返し、トグルボタンが押下されていない場合は ``False`` を返します。"

#: ../source/button_widgets.txt:74
# a912c48cb3fb4d9c8e871bcb8e7191e0
msgid "Sets the status of the toggle button. Set to ``True`` if you want the button to be pressed in, and ``False`` to raise it. This action causes the \"toggled\" signal to be emitted."
msgstr "トグルボタンの状態をセットします。トグルボタンを押下した状態にしたいのであれば ``True`` を指定し、逆にトグルボタンが押下されていない状態にしたいのであれば ``False`` にします。このメソッドを呼び出すと \"toggled\" シグナルが発行されます。"

#: ../source/button_widgets.txt:87
# facee9c3f3be4c6ab4dcfc55cac5c1a4
msgid "CheckButton"
msgstr "チェックボタン"

#: ../source/button_widgets.txt:88
# 34a8d842db3e448aa102ad78570b6013
msgid ":class:`Gtk.CheckButton` inherits from :class:`Gtk.ToggleButton`. The only real difference between the two is :class:`Gtk.CheckButton`'s appearance. A :class:`Gtk.CheckButton` places a discrete :class:`Gtk.ToggleButton` next to a widget, (usually a :class:`Gtk.Label`). The \"toggled\" signal, :meth:`Gtk.ToggleButton.set_active` and :meth:`Gtk.ToggleButton.get_active` are inherited."
msgstr ":class:`Gtk.CheckButton` は :class:`Gtk.ToggleButton` から派生したクラスの一つです。この二つのクラスの違いは :class:`Gtk.CheckButton` の外観ぐらいです。 :class:`Gtk.CheckButton` クラスは一個の完全な :class:`Gtk.ToggleButton` オブジェクトを任意のウィジェット (通常は一個の :class:`Gtk.Label`) の隣に配置します。\"toggled\" シグナルや :meth:`Gtk.ToggleButton.set_active` や :meth:`Gtk.ToggleButton.get_active` といったメソッドも継承しています。"

#: ../source/button_widgets.txt:96
# e1e28be7e65348e3bbd18b9eaa19109a
msgid "CheckButton Objects"
msgstr "チェックボタンのオブジェクト"

#: ../source/button_widgets.txt:100
# c8a3e28360514cf49ecb9617c0cde37d
msgid "Arguments are the same as for :class:`Gtk.Button`."
msgstr "引数は :class:`Gtk.Button` のコンストラクタと同じです。"

#: ../source/button_widgets.txt:103
# d7074c27d2f74d1d8a91532499ef86de
msgid "RadioButton"
msgstr "ラジオボタン"

#: ../source/button_widgets.txt:104
# dbfd782af8004aa6baca000e7aebbc49
msgid "Like checkboxes, radio buttons also inherit from :class:`Gtk.ToggleButton`, but these work in groups, and only one :class:`Gtk.RadioButton` in a group can be selected at any one time. Therefore, a :class:`Gtk.RadioButton` is one way of giving the user a choice from many options."
msgstr "チェックボタン同様に、ラジオボタンもまた :class:`Gtk.ToggleButton` クラスから派生していますが、ラジオボタンはグループで連動します。具体的には、グループの中にある :class:`Gtk.RadioButton` を一回につき一個だけ選択することができます。そのため :class:`Gtk.RadioButton` クラスは、ユーザが複数のオプションを選択するといったユーザ・インタフェースを提供しています。"

#: ../source/button_widgets.txt:109
# ea41c356454c45e0868c375cecfdd8bf
msgid "Radio buttons can be created with one of the static methods :meth:`Gtk.RadioButton.new_from_widget`, :meth:`Gtk.RadioButton.new_with_label_from_widget` or :meth:`Gtk.RadioButton.new_with_mnemonic_from_widget`. The first radio button in a group will be created passing ``None`` as the *group* argument. In subsequent calls, the group you wish to add this button to should be passed as an argument."
msgstr "ラジオボタンは :meth:`Gtk.RadioButton.new_from_widget` または :meth:`Gtk.RadioButton.new_with_label_from_widget` 、あるいは :meth:`Gtk.RadioButton.new_with_mnemonic_from_widget` といった static メソッドのいずれかで生成します。グループの中にある一番最初のラジオボタンは *group* という引数を ``None`` にして生成します。それ以降の (ラジオボタン生成の) メソッドで、この一番最初のラジオボタンのインスタンスを引数に渡すことで、生成したラジオボタンをグループに追加できます。"

#: ../source/button_widgets.txt:117
# 5d38ae6480d74b8bae80c403562685e0
msgid "When first run, the first radio button in the group will be active. This can be changed by calling :meth:`Gtk.ToggleButton.set_active` with ``True`` as first argument."
msgstr "初めて実行した場合、グループの中にある一番最初のボタンの状態が ON になります。これは ``True`` を先頭の引数にして :meth:`Gtk.ToggleButton.set_active` メソッドを呼び出すことで変更することができます。"

#: ../source/button_widgets.txt:121
# 2d20a1605089495ead9fdcc32b46cde0
msgid "Changing a :class:`Gtk.RadioButton`'s widget group after its creation can be achieved by calling :meth:`Gtk.RadioButton.join_group`."
msgstr ":class:`Gtk.RadioButton` を生成した後に、それらが所属しているグループを変更するには :meth:`Gtk.RadioButton.join_group` メソッドを呼び出して下さい。"

#: ../source/button_widgets.txt:125
# 7423ee3404e94ad98e61cff311ab2244
msgid "RadioButton Objects"
msgstr "ラジオボタンのオブジェクト"

#: ../source/button_widgets.txt:131
# ba19fd6a37234f36b7d6f40f7267fa40
msgid "Creates a new :class:`Gtk.RadioButton`, adding it to the same group as the *group* widget. If *group* is ``None``, a new group is created."
msgstr "新しい :class:`Gtk.RadioButton` を一つ生成し *group* というウィジェットと同じグループに追加します。 *group* を ``None`` にすると新しいグループも生成されます。"

#: ../source/button_widgets.txt:136
# cf13b331c11e4f629788532e18d2d27c
msgid "Creates a new :class:`Gtk.RadioButton`. The text of the label widget inside the button will be set to *label*. *group* is the same as for :meth:`new_from_widget`."
msgstr "新しい :class:`Gtk.RadioButton` を一つ生成します。ラジオボタンの中にあるラベルの文字列を *label* にします。 *group* 引数は :meth:`Gtk.RadioButton.new_from_widget` メソッドと同じ扱いです。"

#: ../source/button_widgets.txt:142
# ec3e480f6fb6479281b066c79c4b3323
msgid "Same as :meth:`new_with_label_from_widget`, but underscores in *label* indicate the mnemonic for the button."
msgstr ":meth:`Gtk.RadioButton.new_with_label_from_widget` と同じですが *label* の中にニーモニックのアクセラレータ・キーを表す下線が付与される点が違います。"

#: ../source/button_widgets.txt:147
# 280bb54525f8444e8c2d5f41cfae8886
msgid "Joins this radio button to the group of another :class:`Gtk.RadioButton` object."
msgstr "このラジオボタンを別の :class:`Gtk.RadioButton` のグループに追加します。"

#: ../source/button_widgets.txt:158
# 8f2c50015b0b4db3b049df962f47d735
msgid "LinkButton"
msgstr "リンクボタン"

#: ../source/button_widgets.txt:159
# d2bf4f5d234841778a18d4dac8bd3905
msgid "A :class:`Gtk.LinkButton` is a :class:`Gtk.Button` with a hyperlink, similar to the one used by web browsers, which triggers an action when clicked. It is useful to show quick links to resources."
msgstr ":class:`Gtk.LinkButton` はウェブ・ブラウザでよく利用されるハイパーリンクを持った :class:`Gtk.Button` の一種で、そのリンクをクリックすると関連づけられた任意のアクションを始動します。いろいろなリソースへのリンクを素早く表示させる際に便利なインタフェースです。"

#: ../source/button_widgets.txt:163
# 005cd41d1b08416cabd061f7146ce5d8
msgid "The URI bound to a :class:`Gtk.LinkButton` can be set specifically using :meth:`Gtk.LinkButton.set_uri`, and retrieved using :meth:`Gtk.LinkButton.get_uri`."
msgstr ":class:`Gtk.LinkButton` に関連づける URI は :meth:`Gtk.LinkButton.set_uri` メソッドで指定し :meth:`Gtk.LinkButton.get_uri` メソッドで取得できます。"

#: ../source/button_widgets.txt:168
# 8d5f60ffdff9418d8341ad24882d9629
msgid "LinkButton Objects"
msgstr "リンクボタンのオブジェクト"

#: ../source/button_widgets.txt:172
# f6b6ff0117334b45946175a8e819fca8
msgid "*uri* is the address of the website which should be loaded. The label is set as the text which should be displayed. If it is set to ``None`` or omitted, the web address will be displayed instead."
msgstr "引数の *uri* は参照することになるウェブサイトのアドレスです。引数の *label* はハイパーリンクとして表示する際の文字列です。この引数を ``None`` にするか省略すると、ウェブサイトのアドレスがそのまま表示されます。"

#: ../source/button_widgets.txt:178
# 92d4f1ccf51b44eeadeffa0feeea8ea6
msgid "Retrieves the URI set using :meth:`set_uri`."
msgstr ":meth:`Gtk.LinkButton.set_uri` メソッドを使って指定した URI を取得します。"

#: ../source/button_widgets.txt:182
# 0cca91030f42426cbe32c0ef12a10fb6
msgid "Sets *uri* as the URI where this button points to. As a side-effect this unsets the 'visited' state of the button."
msgstr "このボタンが指している先の URI を *uri* にします。このメソッドを呼び出すと、ボタンが保持している 'visited' というステータスをリセットします。"

#: ../source/button_widgets.txt:194
# 7b20b55dd6584fb0bf0f50afea9199e8
msgid "SpinButton"
msgstr "スピンボタン"

#: ../source/button_widgets.txt:195
# 182bc3469ad64debb8ee1b2ed920e0dc
msgid "A :class:`Gtk.SpinButton` is an ideal way to allow the user to set the value of some attribute. Rather than having to directly type a number into a :class:`Gtk.Entry`, :class:`Gtk.SpinButton` allows the user to click on one of two arrows to increment or decrement the displayed value. A value can still be typed in, with the bonus that it can be checked to ensure it is in a given range. The main properties of a :class:`Gtk.SpinButton` are set through :class:`Gtk.Adjustment`."
msgstr ":class:`Gtk.SpinButton` クラスは、ユーザが任意の属性に対して調節しながら値を指定できるようにするための理想的な方法を提供します。直接 :class:`Gtk.Entry` に値を入力する代わりに :class:`Gtk.SpinButton` を使えばユーザは二つの矢印 (アローボタン) のいずれかをクリックして表示されている値を増やしたり減らしたりできます。さらに値をそのまま入力することもでき、その値が指定された範囲に収まっているかチェックする機能も付いています。 :class:`Gtk.SpinButton` の主なプロパティは :class:`Gtk.Adjustment` を介して指定します。"

#: ../source/button_widgets.txt:203
# 66fea2dc06a94f598670a0197012b5cf
msgid "To change the value that :class:`Gtk.SpinButton` is showing, use :meth:`Gtk.SpinButton.set_value`. The value entered can either be an integer or float, depending on your requirements, use :meth:`Gtk.SpinButton.get_value` or :meth:`Gtk.SpinButton.get_value_as_int`, respectively."
msgstr ":class:`Gtk.SpinButton` が表示している値を変更する際は :meth:`Gtk.SpinButton.set_value` メソッドを使います。入力できる値は必要に応じて実数値または整数値いずれかで、それぞれ :meth:`Gtk.SpinButton.get_value` または :meth:`Gtk.SpinButton.get_value_as_int` メソッドで取得できます。"

#: ../source/button_widgets.txt:208
# 0022f50dfd2f4ca9aa56cfb86eba6e50
msgid "When you allow the displaying of float values in the spin button, you may wish to adjust the number of decimal spaces displayed by calling :meth:`Gtk.SpinButton.set_digits`."
msgstr "スピンボタンの中に実数値を表示できるような場合 :meth:`Gtk.SpinButton.set_digits` メソッドを使って小数点以下の桁数を調整できます。"

#: ../source/button_widgets.txt:212
# b065c06baacf4e45b679ce016937889a
msgid "By default, :class:`Gtk.SpinButton` accepts textual data. If you wish to limit this to numerical values only, call :meth:`Gtk.SpinButton.set_numeric` with ``True`` as argument."
msgstr "デフォルトで :class:`Gtk.SpinButton` は文字列のデータを受け取ることができるようになっています。もし数値だけ入力できるように制限したい場合 :meth:`Gtk.SpinButton.set_numeric` メソッドに引数として ``True`` を渡して呼び出して下さい。"

#: ../source/button_widgets.txt:216
# 92a302d5b897477f8337ceafea5fd6f1
msgid "We can also adjust the update policy of :class:`Gtk.SpinButton`. There are two options here; by default the spin button updates the value even if the data entered is invalid. Alternatively, we can set the policy to only update when the value entered is valid by calling :meth:`Gtk.SpinButton.set_update_policy`."
msgstr "また :class:`Gtk.SpinButton` の更新ポリシーも調整することが可能です。ここには二つの選択肢があります。デフォルトで、スピンボタンは例え間違ったデータが入力された場合でも値を更新するというポリシーになっています。あるいは :meth:`Gtk.SpinButton.set_update_policy` を呼び出して、妥当なデータが入力された時にのみ値を更新するというポリシーも選択できます。"

#: ../source/button_widgets.txt:222
# ea16456c896545c4926f2910439669c6
msgid "SpinButton Objects"
msgstr "スピンボタンのオブジェクト"

#: ../source/button_widgets.txt:228
# a24a2bc6e166495dab3a84fe10da6150
msgid "Replaces the :class:`Gtk.Adjustment` associated with this spin button."
msgstr "このスピンボタンに関連づけられている :class:`Gtk.Adjustment` を *adjustment* で置き換えます。"

#: ../source/button_widgets.txt:232
# 89610757dda042fda7433743655d042b
msgid "Set the precision to be displayed by this spin button. Up to 20 digit precision is allowed."
msgstr "このスピンボタンに表示する値の精度を指定します。小数点以下 20 桁までの精度を指定できます。"

#: ../source/button_widgets.txt:237
# 517d09775408474c9153233f490bb61f
msgid "Sets the step and page increments for this spin button. This affects how quickly the value changes when the spin button's arrows are activated."
msgstr "このスピンボタンに対するステップ単位とページ単位の増分値を指定します。これは、スピンボタンについているアローボタンを押下した時にどれくらい値を変化させるかに影響します。"

#: ../source/button_widgets.txt:242
# fb8fe0784b2949d78b07384905f845ae
msgid "Sets the value of this spin button."
msgstr "このスピンボタンの値を *value* にします。"

#: ../source/button_widgets.txt:246
# ac8e992e390f45239721a447e6cfdf9a
msgid "Get the value of this spin button represented as an float."
msgstr "このスピンボタンが保持している値を実数値として取得します。"

#: ../source/button_widgets.txt:250
# 16f3381c44dd43e9801b93dbc9ba330d
msgid "Get the value of this spin button represented as an integer."
msgstr "このスピンボタンが保持している値を整数値として取得します。"

#: ../source/button_widgets.txt:254
# 0051591e55dc4540b337c1fe51fabbcc
msgid "If *numeric* is ``False``, non-numeric text can be typed into the spin button, else only numbers can be typed."
msgstr "*numeric* が ``False`` の場合、数値ではない文字列をスピンボタンに入力できるようになります。それ以外は数値だけ入力できます。"

#: ../source/button_widgets.txt:259
# 2af30b64fdbd440ba92a78324a807804
msgid "Sets the update behavior of a spin button. This determines whether the spin button is always updated or only when a valid value is set. The *policy* argument can either be :attr:`Gtk.SpinButtonUpdatePolicy.ALWAYS` or :attr:`Gtk.SpinButtonUpdatePolicy.IF_VALID`."
msgstr "このスピンボタンの更新ポリシーを指定します。このポリシーは常にスピンボタンの値を更新するか、あるいは妥当な値が入力された時にだけ更新するかを決定します。引数の *policy* には :attr:`Gtk.SpinButtonUpdatePolicy.ALWAYS` または :attr:`Gtk.SpinButtonUpdatePolicy.IF_VALID` のいずれかを指定できます。"

#: ../source/button_widgets.txt:265
# 69e75c4f8af04daba45c41719ea4c69d
msgid "Adjustment Objects"
msgstr "アジャストメントのオブジェクト"

#: ../source/button_widgets.txt:269
# b90362f91d564b1baeb798b064af06d4
msgid "The :class:`Gtk.Adjustment` object represents a value which has an associated lower and upper bound, together with step and page increments, and a page size. It is used within several GTK+ widgets, including :class:`Gtk.SpinButton`, :class:`Gtk.Viewport`, and :class:`Gtk.Range`."
msgstr ":class:`Gtk.Adjustment` は下限と上限を持ち、ステップ単位とページ単位の増減値を持ち、ページサイズを持つ一個の値を表す抽象的なオブジェクトです。このオブジェクトは :class:`Gtk.SpinButton` や :class:`Gtk.Viewport` や :class:`Gtk.Range` といった GTK+ のいろいろなウィジェットの中で利用されています。"

#: ../source/button_widgets.txt:274
# 71fb53e166644da6a51e73de52685f68
msgid "*value* is the initial value, *lower* the minimum value, *upper* the maximum value, *step_increment* the step increment, *page_increment* the page increment, and *page_size* the page size."
msgstr "*value* は初期値、 *lower* は最小値、 *upper* は最大値、 *step_increment* はステップ単位の増減値、 *page_increment* はページ単位の増減値、そして *page_size* は一ページの大きさです。"

